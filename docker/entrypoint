#!/bin/bash

## This file replaces the Dyalog mapl script
echo " _______     __      _      ____   _____ "
echo "|  __ \ \   / //\   | |    / __ \ / ____|"
echo "|_|  | \ \_/ //  \  | |   | |  | | |     "
echo "     | |\   // /\ \ | |   | |  | | |   _ "
echo " ____| | | |/ /  \ \| |___| |__| | |__| |"
echo "|_____/  |_/_/    \_\______\____/ \_____|"
echo ""
echo "https://www.dyalog.com"
echo ""

export DYALOG=/opt/mdyalog/${DYALOG_VERSION}/64/unicode/
export LD_LIBRARY_PATH="${DYALOG}:${LD_LIBRARY_PATH}"
export WSPATH=$WSPATH:${DYALOG}/ws
export TERM=dumb
export APL_TEXTINAPLCORE=${APL_TEXTINAPLCORE-1}
export TRACE_ON_ERROR=0
export SESSION_FILE="${SESSION_FILE-$DYALOG/default.dse}"

# A local or jenkins builder will call this script from the root of the checked out git repo
# Another build mechanism might copy files to another directory before modifying them
if [ $# -eq 0 ];
# $D is root directory of files to be injected, assuming they have the same relative structure as the original repository
    then
        D=$PWD   # Assume we are in project root calling "./CI/inject_version.sh"
    else
        D=$1     # If argument given, that is new root dir of file to be injected. 
fi

if env | grep "^SQL*" > /dev/null 2>&1 ; then
    cp /etc/odbc.ini /tmp/
    cd /tmp

    echo "Setting up SQAPL Connection"
    env | awk -F"=" '/^SQL/ {print $1 " " $2}' | while read KEY VAL; do
        sed -i "s/##${KEY}##/${VAL}/" /tmp/odbc.ini
    done
    cp /tmp/odbc.ini /etc/odbc.ini
    cd -
fi

ls /app/*.dcfg

if    [ "x${LOAD}" = "x" ] \
   && [ "x${CONFIGFILE}" = "x" ] \
   && [ "x${DYAPP}" = "x" ]; then

    if [ $(ls /app/run.dcfg 2>/dev/null | wc -l) = 1 ]; then
        export CONFIGFILE=$(ls /app/run.dcfg)
        echo "found config file Launching with CONFIGFILE=$CONFIGFILE"
    elif [ $(ls /app/*.aplf 2>/dev/null | wc -l) = 1 ]; then
        export LOAD=$(ls /app/*.aplf)
        echo "found aplf file Launching with LOAD=$LOAD"
    elif [ $(ls /app/*.apln 2>/dev/null | wc -l) = 1 ]; then
        export LOAD=$(ls /app/*.apln)
        echo "found apln file Launching with LOAD=$LOAD"
    elif [ $(ls /app/*.aplc 2>/dev/null | wc -l) = 1 ]; then
        export LOAD=$(ls /app/*.aplc)
        echo "found aplc file Launching with LOAD=$LOAD"
    elif [ $(ls /app/*.dyapp 2>/dev/null | wc -l) = 1 ]; then
        export DYAPP=$(ls /app/*.dyapp)
        echo "found dyapp file Launching with DYAPP=$DYAPP"
    elif [ $(ls /app/*.dws 2>/dev/null | wc -l) = 1 ]; then
        WS=$(ls /app/*.dws)
        echo "found dws file Launching with $WS"
    elif [ $(ls /app/*.dyapp 2>/dev/null | wc -l) -gt 1 ]; then
        echo "found too many dyapp files Starting Dyalog with CLEAR WS"
    elif [ $(ls /app/*.dws 2>/dev/null | wc -l) -gt 1 ]; then
        echo "found too many dws files Starting Dyalog with CLEAR WS"
    else
        echo "nothing to load in /app Starting with CLEAR WS"
    fi
else 
    echo "LOAD, CONFIGFILE or DYAPP was set, not loading any defaults"
fi

if [ -n "${RIDE_INIT}" ]; then
    $DYALOG/dyalog +s -q ${WS} $@
else
    $DYALOG/dyalog -s ${WS} $@
fi


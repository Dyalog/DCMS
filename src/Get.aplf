 res←Get req;nested_matrix;ytid;ep;single_video;videos;persons
 nested_matrix←2         ⍝ For conversion to JSON (http://help.dyalog.com/18.2/#Language/System%20Functions/json.htm > JSON export > Wrappers)
 :If 0<#.GLOBAL.debug ⋄ #.last←req ⋄ :EndIf
 :Trap #.GLOBAL.debug↓0 0
     res←req.Response
     res.Headers←0 2⍴''
     res.Headers⍪←'Access-Control-Allow-Origin'#.DCMS.service.AcceptFrom
     res.Headers⍪←'Access-Control-Allow-Headers' '*'
     :If '/videos'≡7↑req.Endpoint
         res←read_.QueryVideos req   ⍝ TODO add/change to query parameter
     :ElseIf (8≥≢req.Endpoint)∧'/events'≡7↑req.Endpoint
         res←read_.QueryEvents ⍬
     :ElseIf '/persons'≡8↑req.Endpoint
         res←read_.QueryPersons req
     :ElseIf '/presenters'≡11↑req.Endpoint
         res←read_.QueryPresenters ⍬
     :ElseIf '/refresh'≡8↑req.Endpoint
⍝ A better way to handle authorisation would be to have auth_.VerifyToken return a permissions value which could then be checked against
⍝ groups of endpoints. Is it more efficient to funnel requests into groups where it DOES have permissions and then choose endpoint behaviour,
⍝ or like here, list through endpoints and check if you have permissions for the one you are trying to access?
⍝ req becomes a semiglobal state handler through its reference semantics.
⍝ API functions take a Jarvis Request object as argument which they modify, and whose ref they return.
         res←auth_.VerifyToken req
         :If ~∨/401 403∊res.Status
             #.DCMS.Refresh req
         :EndIf
     :ElseIf '/tables'≡7↑req.Endpoint
         res←#.GLOBAL.tables
     :Else
         'Resource not found'req.Fail 404
     :EndIf
 :Else
     #.DCMS.Catch ⎕EN ⎕DMX.DM
 :EndTrap

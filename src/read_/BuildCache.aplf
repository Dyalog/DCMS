 msg←BuildCache msg;sql;val;ucs;u;t;epd;fields;ytid;nested_matrix;endpoints;ddn;dti;per;name;grp;med;RLTB;gmat;idx;vids;ListTogether
 msg←0 'OK'
⍝ Store pre-joined table for API Endpoint and Query results
⍝ Store simple character matrices for searching
 nested_matrix←2
 endpoints←ReadJSON #.GLOBAL.app_dir,'src/read_/endpoints.json5'
 '#.CACHE.persons'⎕NS ⍬
 (fields ucs)←↓⍉↑endpoints.persons.person.fields.(field unicode)
 sql←endpoints.persons.person.sql
 val←ucs #.DCMS.SQL.Do sql
 :If 0=≢val
     #.CACHE.persons.list←⎕JSON ⍬
     #.CACHE.persons.id←⎕JSON ⍬
     #.CACHE.persons.media←⎕JSON ⍬
 :Else
     (val fields),←∘⊂¨'' 'media'   ⍝ Empty media field unless id specified
     val⍪⍨←fields
     #.CACHE.persons.list←⎕JSON⊂nested_matrix val
     #.CACHE.persons.id←'id'JSONExtract #.CACHE.persons.list
     #.CACHE.persons.organisation←'organisation'JSONExtract #.CACHE.persons.list
 :EndIf

 '#.CACHE.events'⎕NS ⍬
 (fields ucs)←↓⍉↑endpoints.events.fields.(field unicode)
 sql←'SELECT ',(1↓∊','∘,¨fields),' FROM event'
 val←fields⍪ucs #.DCMS.SQL.Do sql
 #.CACHE.events←⎕JSON ⎕JSON⊂nested_matrix val

 (fields ucs)←↓⍉↑endpoints.dtv_events.fields.(field unicode)
 val←fields⍪ucs #.DCMS.SQL.Do endpoints.dtv_events.sql
 ListTogether←{fc←⍵[;3]∊r←⊂⍺ ⋄ ~∨/fc:⍵ ⋄ (f∨~fc)⌿r@(⊂2,⍨⍸f←<\fc)⊢⍵}   ⍝ List all events of this type as one item in video library
 val←'Functional Conf'ListTogether val
 val←'LambdaConf'ListTogether val
 val←{v←{(⊂⍋⍵)⌷⍵}1↓⍵ ⋄ (1⌷⍵)⍪v⌷⍨⊂'AD'⍋↑v[;2]}val                       ⍝ Sort alphabetical, but with [A]PL and [D]yalog entries first
 #.CACHE.dtv_events←⎕JSON ⎕JSON⊂nested_matrix val

 '#.CACHE.presenters'⎕NS ⍬
 sql←endpoints.presenters.sql
 val←1 #.DCMS.SQL.Do sql
 #.CACHE.presenters←⎕JSON ⎕JSON,val

 '#.CACHE.videos'⎕NS ⍬
 (fields ucs)←↓⍉↑endpoints.videos.fields.(field unicode)
 sql←endpoints.videos.sql
 val←ucs #.DCMS.SQL.Do sql

 :If 0=≢val
     #.CACHE.videos.fields←fields
     #.CACHE.videos.values←''⍴⍨0,≢fields
     #.CACHE.videos.index_cols←''⍨¨⍳≢fields
     #.CACHE.videos.index_all←⍕⍪''
 :Else
     vids←#.CACHE.videos
     vids.(index_all index_cols fields values)←VideosCache val fields
     idx←(vids.(index_cols⊃⍨fields⍳⊂)'youtube_id')⍳⍥⎕C↑endpoints.featured.youtube_ids
     vids.featured←0 ⎕JSON 1 ⎕JSON⊂nested_matrix(vids.fields⍪vids.values[idx;])

 :EndIf

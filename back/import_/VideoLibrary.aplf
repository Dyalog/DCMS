 msg←VideoLibrary;table;file;data;sql;RLTB;eid;evt;event;wse;i;idx;cat;values;current;cc;cv;exists;ids;columns;types;p;pr;n;urls;yt;ytx;ext;id;ytd;ucs
⍝ Tables modified: presentations, presenters, media
⍝ TODO: not table as argument... but what?
⍝ Import data from video library spreadsheet and link data in database
 msg←0 'OK'
 table←'presentation'
 file←#.GLOBAL.(data_sources∘⍎)table
 data←∪3↓⎕CSV file ⍬ 4
 data⌿⍨←~data[;1]∊⊂'xxx'
⍝ TITLE SOURCE PRESENTER(S) COMPANY YYYY-MM URL ABSTRACT TIMELINE
⍝   1     2        3          4       5      6     7        8

⍝ SOURCE key into events table
 sql←'SELECT id,title FROM event'
 RLTB←{⍵/⍨(∨\∧∘⌽∨\∘⌽)' '≠⍵}                                        ⍝ Remove leading and trailing blanks TODO: might not need
 (eid evt)←↓⍉RLTB¨#.DCMS.SQL.Do sql ⋄ eid←∊eid                     ⍝ (id title)
 event←(eid,0)⌷⍨⊂evt⍳data[;2]                                      ⍝ ID into event table
 (wse i)←↓⍉↑'Dyalog.+workshop'⎕S{⍵.Match(1+⍵.BlockNum)}⊢data[;2]   ⍝ (Dyalog 'YY)(ID into data to be inserted)
 wse←wse↑⍨¨¯2+⍸¨'workshop'∘⍷¨wse                                   ⍝ Workshop event name (Dyalog 'YY)
 idx←evt⍳wse
 event[i]←(eid,0)[idx]                                             ⍝ ID into event table for workshop event
 cat←(⊂'User Meeting Workshop')@i⊢(⊂'')⍴⍨≢data                     ⍝ User Meeting Workshop as presentation.category if workshop

⍝ Insert data into presentations table
 values←⍪1(⌷⍤1)data         ⍝ title
 values,←event              ⍝ event_id
 values,←7(⌷⍤1)data         ⍝ description

 sql←'SELECT id,title,event_id FROM presentation'
 current←#.DCMS.SQL.Do sql
 current[;2]←('UTF-8'⎕UCS ⎕UCS)¨current[;2]

 cc←'id' 'title' 'event_id'            ⍝ Existing value columns
 cv←'title' 'event_id' 'description'   ⍝ Input value columns
 (exists ids)←(cv values)('title' 'event_id'Compare)(cc current)

 columns←'title' 'event_id' 'description' 'updated_by'
 values,←⊂'DCMS.import_.VideoLibrary'
 types←table GetTypes columns
 UpdateInsertExternalResource(table exists ids columns types values)

⍝ Presenters
 sql←'SELECT id,name FROM person'
 p←#.DCMS.SQL.Do sql
 p[;2]←('UTF-8'⎕UCS ⎕UCS)¨p[;2]
 sql←'SELECT id,title,event_id FROM presentation'
 pr←#.DCMS.SQL.Do sql
 pr[;2]←RLTB∘('UTF-8'⎕UCS ⎕UCS)¨pr[;2]
                                      ⍝ --- Assumes all data appears in pr ---
 i←pr[pr[;2]⍳data[;1];1]              ⍝ ID into presentations table
⍝ ('title' From presentations) OrderedBy ('title' From input)
 n←RLTB¨¨(⎕UCS 10)∘(≠⊆⊢)¨data[;3]     ⍝ Presenter names

 values←⍪i/⍨≢¨n                       ⍝ ID into presentations table expanded by number of names
 values,←0@(>∘(≢p))∊(⊢/p)∘⍳¨n         ⍝ ID into persons table
 columns←'presentation_id' 'person_id' 'updated_by'
 values,←⊂'DCMS_ImportVideoLibrary'
 types←'presenter'GetTypes columns

 sql←'SELECT id,presentation_id,person_id FROM presenter'
 current←#.DCMS.SQL.Do sql
 cc←'id' 'presentation_id' 'person_id'   ⍝ Existing value columns
 cv←'presentation_id' 'person_id'        ⍝ Input value columns
 (exists ids)←(cv values)('presentation_id' 'person_id'Compare)(cc current)

 UpdateInsertExternalResource('presenter'exists ids columns types values)

⍝ Media

⍝ Use URL to link to media table & youtube_videos if applicable
⍝ title, URL, presentation_id, type, media_id into media table
 values←⍬⍴⍨0,⍨≢data
 values,←data[;1]                                              ⍝ title
 urls←data[;6]
 (yt ytx)←ExtractYouTubeID urls
 ext←{(≢⍵)↑⍸⍣¯1,1+'https?://.+'⎕S{⍵.(BlockNum)}⊢⍵}urls/⍨~yt    ⍝ External links to videos (not dyalog.tv/youtube)
 ext←ext/⍸~yt
 values,←(⊂'external_video')@ext⊢(≢urls)⍴⊂'youtube_video'      ⍝ media.type
 (id ytd)←YouTubeImport ytx                                    ⍝ Retrieve data from YouTube API
 sql←'SELECT id,youtube_id FROM youtube_videos'
 (id ytd)←↓⍉#.DCMS.SQL.Do sql
 i←ytd⍳ytx
 values,←yt\(id,0)[i]                                          ⍝ media_id (youtube_videos table ID) TODO: external_videos table
 values,←urls[ext]@ext⊢('youtu.be/'∘,¨ytx)@(⍸yt)⊢(≢urls)⍴⊂''   ⍝ url
 i←pr[;2 3]⍳data[;1],⍪event
 values,←(⊂i)⌷pr[;1],0                                         ⍝ presentation_id

 sql←'SELECT id,title,url FROM media'
 ucs←0 1 0
 current←0 1 0 #.DCMS.SQL.Do sql
 cc←'id' 'title' 'url'
  ⍝ TODO: annoying that columns must be declared in particular order (order of appearance in values matrix)
 columns←'title' 'type' 'media_id' 'url' 'presentation_id'
 types←'media'GetTypes columns
 (exists ids)←(columns values)('title' 'url'Compare)(cc current)

 UpdateInsertExternalResource('media'exists ids columns types values)

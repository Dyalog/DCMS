 schema_definitions←SetupSchema folder;schema_definitions;sequence;latest;migrations;migration;batch;sql;db
 schema_definitions←'.*\d+-.*.sql'⎕S'&'⊃0(⎕NINFO⍠'Wildcard' 1)folder
⍝ StatementsFromSchema
⍝ Check and apply migrations (schema updates)
 sequence←∊2⊃¨⎕VFI¨⊃¨'-'(≠⊆⊢)¨2⊃¨⎕NPARTS¨schema_definitions
 db←#.GLOBAL.db
 :If 0=⊃latest←#.SQA.Do db'select max(batch) from migrations'
     (migrations sequence)←schema_definitions sequence↓⍨¨1+3 1⊃latest   ⍝ Database exists, apply after most recent migration
 :Else
     migrations←schema_definitions
 :EndIf
 :For (migration batch) :InEach (migrations sequence)
     sql←StatementsFromSchema migration
     Catch¨#.SQA.Do¨(⊂db)∘,¨⊂¨sql
     Catch #.SQA.Do db'insert into migrations (`migration`,`batch`) values (:file<C255:,:num<I:);'migration batch
 :EndFor
